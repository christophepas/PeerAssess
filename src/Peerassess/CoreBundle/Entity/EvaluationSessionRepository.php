<?php

namespace Peerassess\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Peerassess\CoreBundle\Entity\Candidate;
use Peerassess\CoreBundle\Entity\Supervisor;
use Peerassess\CoreBundle\Entity\Status;
use Peerassess\CoreBundle\Entity\CorrectionStatus;

/**
 * EvaluationSession
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvaluationSessionRepository extends EntityRepository
{
    // TODO: replace the use of this with a ParamConverter
    public function loadEvaluation ($id)
    {
        $qb = $this->createQueryBuilder('es');
        $qb->leftJoin('es.candidate', 'a')->addSelect('a');
        $qb->leftJoin('a.user', 'u')->addSelect('u');
        $qb->leftJoin('es.evaluation', 'e')->addSelect('e');
        $qb->leftJoin('e.supervisor', 'c')->addSelect('c');
        $qb->where('es.id = :id')->setParameter('id', $id);

        return $qb->getQuery()->getSingleResult();
    }

    public function findByCandidate(Candidate $candidate)
    {
        $qb = $this->createQueryBuilder('es');
        $qb->leftJoin('es.candidate', 'd')->addSelect('d');
        $qb->leftJoin('d.user', 'u')->addSelect('u');
        $qb->where('d.id = :id')->setParameter('id', $candidate->getId());

        return $qb->getQuery()->getResult();
    }

    public function findFinishedBySupervisor(Supervisor $supervisor)
    {
        $qb = $this->createQueryBuilder('es');

        $qb->leftJoin('es.evaluation', 'e')->addSelect('e');
        $qb->leftJoin('e.supervisor', 'r')->addSelect('r');
        $qb->leftJoin('es.invite', 'i')->addSelect('i');
        $qb->leftJoin('es.correctionsReceived', 'cr');

        $qb->where('r.id = :rid')->setParameter('rid', $supervisor->getId());
        $qb->andWhere(
            $qb->expr()->between('es.status', Status::CLOSED, Status::CLOSED)
        );
        $qb->andWhere('es.archivedDate IS NULL');
        $qb->andWhere('i IS NULL OR i.archivedDate IS NULL');
        $qb->andWhere('cr.status = :status')->setParameter('status', CorrectionStatus::FINISHED);

        return $qb->getQuery()->getResult();
    }
}
